>glimpse(AB_NYC_2019)
>library(ggplot2)
> library(tidyverse)
Attaching packages
✓ tibble
3.1.1
✓ purrr 0.3.4
✓ tidyr
1.1.3
✓ stringr 1.4.0
✓ readr
1.4.0
Conflicts
✓ forcats 0.5.1
tidyverse 1.3.1
x dplyr::filter() masks stats:: filter()
tidyverse_conflicts() -
x dplyr::lag()
masks stats::lag()
> library(readr)
> AB_NYC_2019 <- read_csv("AB_NYC_2019.csv")
> summary(AB_NYC_2019)
> Zero<-AB_NYC_2019%>%
+ filter(price<1)
>listings<-AB_NYC_2019 %>%
+ filter (price >= 1)
> summary(listings$price)
> ggplot(data = listings, mapping = aes(x = price)) + geom_histogram()
> ggplot(listings) 
+geom_histogram(mapping = aes(x = price), binwidth = 100) 
+coord_cartesian(ylim = c(0, 50))
> unusual<- listings %>%
+ filter (price > 1000)
> moreunusual<- listings %>%
+ filter (price > 5000)
> regularlistings <- listings %>%
+ filter (between (price, 1, 1000))
> ggplot(data = regularlistings, mapping = aes(x = price)) 
+geom_freqpoly(mapping = aes(colour = neighbourhood_group), binwidth=100)
> ggplot(data = regularlistings, mapping = aes(x = neighbourhood_group, y = price))  
+ geom_boxplot()
> ggplot( data = regularlistings, mapping = aes(x = price, y number_of_rev iews, color = neighbourhood_group))+ geom_point() + stat_smooth(method=lm)
`geom_smooth()` using formula 'y ~ x'
> ggplot(data = listings) 
+geom_count(mapping = aes(x = neighbourhood_group, y = room_type))
